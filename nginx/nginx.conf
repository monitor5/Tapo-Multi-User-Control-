# =============================================================================
# SIMPLIFIED NGINX CONFIGURATION FOR SYNOLOGY DEPLOYMENT
# =============================================================================
# SSL termination is handled by Synology, nginx only serves HTTP

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log warn;

    # Basic optimizations
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/xml+rss 
               application/json application/xml;

    # Security headers (applied to all responses)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Upstream backend configuration
    upstream backend {
        server web:5011;
        keepalive 32;
    }

    # Real IP configuration for proper client IP detection
    set_real_ip_from 172.16.0.0/12;    # Docker networks
    set_real_ip_from 192.168.0.0/16;   # Private networks
    set_real_ip_from 10.0.0.0/8;       # Private networks
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # ─── HTTP SERVER (Port 80) ─────────────────────────────────────────────────
    # Main application server - Synology handles SSL termination
    server {
        listen 80;
        server_name _;

        # Static files
        location /static/ {
            alias /var/www/static/;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Health check endpoint
        location /healthz {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # Synology handles SSL termination
            
            # Health check specific settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Main application
        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # Synology handles SSL termination
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            
            # WebSocket support (if needed in future)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Security headers for proxied requests
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header X-Url-Scheme https;
        }
    }
}
