

# =============================================================================
# TAPO CONTROL - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# This template supports both development and production environments

# ─── DEPLOYMENT ENVIRONMENT ─────────────────────────────────────────────────
# Options: development, production, testing
APP_ENV=production

# ─── APPLICATION SETTINGS ───────────────────────────────────────────────────
DEBUG=false
HOST=0.0.0.0
PORT=5003
LOG_LEVEL=INFO

# ─── DATABASE CONFIGURATION ─────────────────────────────────────────────────
# SQLite for development, can be changed to PostgreSQL for production
DATABASE_URL=sqlite:///./users.db

# ─── SECURITY SETTINGS ──────────────────────────────────────────────────────
# Generate a secure secret key for JWT tokens
# Use: openssl rand -hex 32
SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=60
# ──────────────────────────────────────────
# Tapo 스마트 플러그 계정 정보
# ──────────────────────────────────────────
TAPO_EMAIL=rladngus474747@gmail.com
TAPO_PASSWORD=Rlarlarla47@
# ─── TAPO DEVICES CONFIGURATION ─────────────────────────────────────────────
# JSON format: {"device_name": "ip_address", "device2": "ip2"}
# Example: {"Living Room": "192.168.1.100", "Bedroom": "192.168.1.101"}
PLUGS={"집컴": "dause2.iptime.org"}

# ─── ADMIN USER SETUP ───────────────────────────────────────────────────────
# Default admin user (optional, can be created via script)
ADMIN_USERNAME=admin
ADMIN_PASSWORD=adminadmin

# ─── DOCKER & DEPLOYMENT SETTINGS ──────────────────────────────────────────
# Domain configuration for production deployment
DOMAIN=tapo.dause.uk
EMAIL=uhyun@dause.uk

# ─── SSL/TLS CONFIGURATION ──────────────────────────────────────────────────
# SSL certificate paths (auto-managed by Docker Compose)
SSL_CERT_PATH=/etc/ssl/certs/server.crt
SSL_KEY_PATH=/etc/ssl/private/server.key

# ─── NGINX CONFIGURATION ────────────────────────────────────────────────────
# Nginx proxy settings
NGINX_HTTP_PORT=84
NGINX_HTTPS_PORT=8443
NGINX_WORKER_CONNECTIONS=1024

# ─── DEVELOPMENT OVERRIDES ──────────────────────────────────────────────────
# These settings override defaults in development mode
# DEV_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
# DEV_RELOAD=true

# ─── PRODUCTION OVERRIDES ───────────────────────────────────────────────────
# These settings override defaults in production mode
# PROD_WORKERS=4
# PROD_MAX_REQUESTS=1000
# PROD_TIMEOUT=30

# ─── MONITORING & LOGGING ───────────────────────────────────────────────────
# LOG_FORMAT=json  # For production log aggregation
# SENTRY_DSN=https://your-sentry-dsn  # For error tracking

# ─── HEALTH CHECK SETTINGS ──────────────────────────────────────────────────
# HEALTH_CHECK_INTERVAL=30
# HEALTH_CHECK_TIMEOUT=5

# ─── BACKUP SETTINGS ────────────────────────────────────────────────────────
# AUTO_BACKUP=true
# BACKUP_INTERVAL=24h
# BACKUP_RETENTION=7d 